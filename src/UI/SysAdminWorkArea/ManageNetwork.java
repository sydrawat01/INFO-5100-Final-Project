/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.SysAdminWorkArea;

import ChemoCare.Ecosystem;
import ChemoCare.NetworkSystem.NetworkSystem;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harshita, sid
 */
public class ManageNetwork extends javax.swing.JPanel {

    /**
     * Creates new form ManageNetwork
     */
    private JPanel userProcessContainer;
    private Ecosystem ecosystem;
    
    public ManageNetwork(JPanel userProcessContainer, Ecosystem ecosystem) {
      initComponents();
      this.userProcessContainer = userProcessContainer;
      this.ecosystem = ecosystem;
      populateNetworkSystemTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tblNetworkSystem = new javax.swing.JTable();
    lblName = new javax.swing.JLabel();
    btnSubmit = new javax.swing.JButton();
    txtName = new javax.swing.JTextField();
    btnBack = new javax.swing.JButton();
    lblText = new javax.swing.JLabel();
    btnDelete = new javax.swing.JButton();
    lblZip = new javax.swing.JLabel();
    txtZip = new javax.swing.JTextField();

    jPanel1.setBackground(new java.awt.Color(190, 194, 224));

    tblNetworkSystem.setBackground(new java.awt.Color(231, 194, 183));
    tblNetworkSystem.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null},
        {null, null},
        {null, null},
        {null, null}
      },
      new String [] {
        "Name", "Zip"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.Object.class
      };
      boolean[] canEdit = new boolean [] {
        false, true
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jScrollPane1.setViewportView(tblNetworkSystem);

    lblName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
    lblName.setForeground(new java.awt.Color(255, 255, 255));
    lblName.setText("Name");

    btnSubmit.setBackground(new java.awt.Color(250, 218, 209));
    btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnSubmit.setText("Submit");
    btnSubmit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSubmitActionPerformed(evt);
      }
    });

    btnBack.setBackground(new java.awt.Color(250, 218, 209));
    btnBack.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnBack.setText("<< Back");
    btnBack.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnBackActionPerformed(evt);
      }
    });

    lblText.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    lblText.setForeground(new java.awt.Color(255, 255, 255));
    lblText.setText("Manage Network");

    btnDelete.setBackground(new java.awt.Color(250, 218, 209));
    btnDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    btnDelete.setText("Delete");
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnDeleteActionPerformed(evt);
      }
    });

    lblZip.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    lblZip.setForeground(new java.awt.Color(255, 255, 255));
    lblZip.setText("Zip Code");

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(115, 115, 115)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
              .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblName)
                .addGap(18, 18, 18)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblZip)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtZip)
                .addGap(18, 18, 18)
                .addComponent(btnSubmit)
                .addGap(18, 18, 18)
                .addComponent(btnDelete))
              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 515, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(209, 551, Short.MAX_VALUE)
            .addComponent(btnBack)))
        .addContainerGap())
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addGap(209, 209, 209)
        .addComponent(lblText)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(btnBack)
        .addGap(13, 13, 13)
        .addComponent(lblText)
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(54, 54, 54)
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(lblName)
          .addComponent(btnSubmit)
          .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(btnDelete)
          .addComponent(lblZip)
          .addComponent(txtZip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(184, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 650, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addGap(0, 0, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 0, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 454, Short.MAX_VALUE)
      .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addGap(0, 0, Short.MAX_VALUE)
          .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 0, Short.MAX_VALUE)))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
      String name = txtName.getText();
    String zipcode = txtZip.getText().trim();

    int zip = 0;
    ArrayList<NetworkSystem> networkSystemList = ecosystem.getNetworkSystems();
    ArrayList<String> networkNamesList = new ArrayList<>();
    ArrayList<Integer> networkZipsList = new ArrayList<>();

    for (NetworkSystem ns : networkSystemList) {
      networkNamesList.add(ns.getName());
      networkZipsList.add(ns.getZipcode());
    }

    try {
      zip = Integer.parseInt(zipcode);
    } catch(Exception e) {
      JOptionPane.showMessageDialog(null, "Network System zipcode should only be integer!", "Warning!", JOptionPane.WARNING_MESSAGE);
      return;
    }

    if(networkNamesList.contains(name)) {
      JOptionPane.showMessageDialog(null, "Network System already exists in the database!");
      txtName.setText("");
      txtZip.setText("");
      return;
    } else if(networkZipsList.contains(zip)) {
      JOptionPane.showMessageDialog(null, "Network System zipcode already exists in the database!");
      txtName.setText("");
      txtZip.setText("");
      return;
    } else {
      if(name == null || name.equals("")) {
        JOptionPane.showMessageDialog(null, "Network System name field cannot be left empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
        return;
      }
      if(zipcode == null || zipcode.equals("")) {
        JOptionPane.showMessageDialog(null, "Network System zipcode cannot be left empty!", "Warning!", JOptionPane.WARNING_MESSAGE);
        return;
      } else {
        NetworkSystem ns = ecosystem.createAndAddSystem();
        ns.setName(name);
        ns.setZipcode(zip);
        JOptionPane.showMessageDialog(null, "New Network Systemm has been added!");
        txtName.setText("");
        txtZip.setText("");
        populateNetworkSystemTable();
      }
    }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
      userProcessContainer.remove(this);
      Component[] cmpArr = userProcessContainer.getComponents();
      Component component = cmpArr[cmpArr.length - 1];
      SysAdminWorkArea sysAdmin = (SysAdminWorkArea) component;
      sysAdmin.populateNetworkSystems();
      CardLayout layout = (CardLayout) userProcessContainer.getLayout();
      layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
      int selectedRow = tblNetworkSystem.getSelectedRow();
      if (selectedRow < 0) {
        JOptionPane.showMessageDialog(null,
          "Please select a network system to be deleted, from the table!",
          "Warning!", JOptionPane.WARNING_MESSAGE);
        return;
      } else {
        NetworkSystem network = (NetworkSystem) tblNetworkSystem.getValueAt(selectedRow, 0);
        int dialogResult = JOptionPane.showConfirmDialog(null,
          "Do you want to proceed?");
        if (dialogResult == JOptionPane.YES_OPTION) {
          ecosystem.getNetworkSystems().remove(network);
          populateNetworkSystemTable();
          JOptionPane.showMessageDialog(null, "Deleted the network!");
        }
      }
    }//GEN-LAST:event_btnDeleteActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnBack;
  private javax.swing.JButton btnDelete;
  private javax.swing.JButton btnSubmit;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JLabel lblName;
  private javax.swing.JLabel lblText;
  private javax.swing.JLabel lblZip;
  private javax.swing.JTable tblNetworkSystem;
  private javax.swing.JTextField txtName;
  private javax.swing.JTextField txtZip;
  // End of variables declaration//GEN-END:variables

  private void populateNetworkSystemTable() {
    DefaultTableModel model = (DefaultTableModel) tblNetworkSystem.getModel();
    model.setRowCount(0);
    for (NetworkSystem ns : ecosystem.getNetworkSystems()) {
      Object[] row = new Object[2];
      row[0] = ns;
      row[1] = ns.getZipcode();
      model.addRow(row);
    }
  }
}
